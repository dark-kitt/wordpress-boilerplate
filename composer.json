{
  "name": "dark-kitt/wordpress-boilerplate",
  "description": "A small WordPress boilerplate",
  "type": "project",
  "license": "CC_BY-SA_4.0_DEED",
  "version": "0.0.1",
  "authors": [
    {
      "name": "dark-kitt"
    }
  ],
  "repositories": {
    "wpackagist": {
      "type": "composer",
      "url": "https://wpackagist.org"
    },
    "advanced-custom-fields/advanced-custom-fields-pro": {
      "type": "package",
      "package": {
        "name": "advanced-custom-fields/advanced-custom-fields-pro",
        "version": "6.2.7",
        "type": "wordpress-plugin",
        "dist": {
          "type": "zip",
          "url": "https://connect.advancedcustomfields.com/index.php?a=download&p=pro&k=<<ACF_KEY>>&t=6.2.7"
        }
      }
    },
    "wordpress-theme-configuration": {
      "type": "vcs",
      "url": "https://github.com/dark-kitt/wordpress-theme-configuration"
    },
    "wordpress-mu-plugin-autoloader": {
      "type": "vcs",
      "url": "https://github.com/dark-kitt/wordpress-mu-plugin-autoloader"
    },
    "wordpress-theme-vue": {
      "type": "vcs",
      "url": "https://github.com/dark-kitt/wordpress-theme-vue"
    }
  },
  "require": {
    "advanced-custom-fields/advanced-custom-fields-pro": "^6.2.7",
    "dark-kitt/wordpress-theme-configuration": "dev-main",
    "dark-kitt/wordpress-mu-plugin-autoloader": "dev-main",
    "dark-kitt/wordpress-theme-vue": "dev-main",
    "roots/wordpress": "^6.4",
    "roots/wp-password-bcrypt": "^1.0.0",
    "vlucas/phpdotenv": "^5.3",
    "wpackagist-plugin/acf-extended": "^0.8.5",
    "wpackagist-plugin/acf-rgba-color-picker": "^1.2",
    "wpackagist-plugin/jwt-authentication-for-wp-rest-api": "^1.2.6"
  },
  "extra": {
    "installer-paths": {
      "web/app/mu-plugins/{$name}/": [
        "type:wordpress-muplugin"
      ],
      "web/app/plugins/{$name}/": [
        "type:wordpress-plugin"
      ],
      "web/app/themes/{$name}/": [
        "type:wordpress-theme"
      ]
    },
    "wordpress-install-dir": "web/wp"
  },
  "config": {
    "optimize-autoloader": true,
    "preferred-install": {
      "dark-kitt/*": "source",
      "*": "dist"
    },
    "sort-packages": true,
    "allow-plugins": {
      "roots/wordpress-core-installer": true,
      "composer/installers": true
    }
  },
  "minimum-stability": "dev",
  "prefer-stable": true,
  "scripts": {
    "post-install-cmd": [
      "composer run-script set-up-project;"
    ],
    "post-update-cmd": [
      "composer run-script set-up-project;"
    ],
    "set-up-project": [
      "if [ ! -d ./web/app/themes ]; then mkdir -p ./web/app/themes; fi",
      "if [[ $( composer show | grep dark-kitt/wordpress-theme-vue ) &&  ! -d ./web/app/themes/$(basename $PWD) ]]; then composer run-script default-base-theme-files && composer run-script clear-base-theme; fi",
      "if [[ $( composer show | grep dark-kitt/wordpress-theme-configuration ) ]]; then composer run-script clear-theme-configuration; fi",
      "if [[ $( composer show | grep dark-kitt/wordpress-mu-plugin-autoloader ) ]]; then mv ./web/app/mu-plugins/wordpress-mu-plugin-autoloader/mu-plugin-autoloader.php ./web/app/mu-plugins/mu-plugin-autoloader.php && composer run-script clear-mu-autoloader; fi",
      "if [ ! -f .env ]; then composer run-script default-env-file; fi",
      "if [ ! -f ./web/index.php ]; then composer run-script default-index-file; fi",
      "if [ ! -f ./web/wp-config.php ]; then composer run-script default-wp-config-file; fi",
      "if [ ! -f ./web/.htaccess ]; then composer run-script default-htaccess-file; fi",
      "if [ ! -d ./web/media ]; then mkdir ./web/media; chmod 755 ./web/media; echo '' > ./web/media/.gitkeep; fi",
      "if [ ! -d ./web/storage ]; then mkdir ./web/storage; chmod 755 ./web/storage; fi",
      "if [ ! -d ./web/storage/cache ]; then mkdir ./web/storage/cache; chmod 755 ./web/storage/cache; echo '' > ./web/storage/cache/.gitkeep; fi",
      "if [ ! -d ./web/storage/logs ]; then mkdir ./web/storage/logs; chmod 755 ./web/storage/logs; echo '' > ./web/storage/logs/.gitkeep; fi",
      "if [ ! -d ./web/storage/lang ]; then mkdir ./web/storage/lang; chmod 755 ./web/storage/lang; echo '' > ./web/storage/lang/.gitkeep; fi"
    ],
    "default-env-file": [
      "chmod +x ./scripts/read-write-files.sh && ./scripts/read-write-files.sh .env ./.env"
    ],
    "default-index-file": [
      "chmod +x ./scripts/read-write-files.sh && ./scripts/read-write-files.sh index.php ./web/index.php"
    ],
    "default-wp-config-file": [
      "chmod +x ./scripts/read-write-files.sh && ./scripts/read-write-files.sh wp-config.php ./web/wp-config.php"
    ],
    "default-htaccess-file": [
      "chmod +x ./scripts/read-write-files.sh && ./scripts/read-write-files.sh .htaccess ./web/.htaccess"
    ],
    "default-base-theme-files": [
      "name=$(basename $PWD); if [[ -d ./web/app/themes/wordpress-theme-vue && ! -d ./web/app/themes/$name ]]; then cp -r ./web/app/themes/wordpress-theme-vue ./web/app/themes/$name && rm -rf ./web/app/themes/wordpress-theme-vue; fi",
      "name=$(basename $PWD); if [ ! -f ./web/app/themes/$name/style.css ]; then echo \"/**\n * Theme Name: ${name}\n * Author: dark-kitt\n * Author URI: https://www.kitt.digital\n */\" > ./web/app/themes/$name/style.css; fi",
      "name=$(basename $PWD); if [ ! -f ./web/app/themes/$name/header.php ]; then echo \"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\"/>\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1\"/>\n\t\t<title>Vue.js WordPress Theme</title>\n\t</head>\n\t<body>\n\t\t<header></header>\" > ./web/app/themes/$name/header.php; fi",
      "name=$(basename $PWD); if [ ! -f ./web/app/themes/$name/index.php ]; then echo \"<main></main>\" > ./web/app/themes/$name/index.php; fi",
      "name=$(basename $PWD); if [ ! -f ./web/app/themes/$name/footer.php ]; then echo \"\t\t<footer></footer>\n\t</body>\n</html>\" > ./web/app/themes/$name/footer.php; fi",
      "name=$(basename $PWD); if [ ! -f ./web/app/themes/$name/functions.php ]; then cp ./web/app/mu-plugins/wordpress-theme-configuration/example.functions.php ./web/app/themes/$name/functions.php; fi"
    ],
    "clear-theme-configuration": [
      "if [ -f ./web/app/mu-plugins/wordpress-theme-configuration/.gitignore ]; then rm -f ./web/app/mu-plugins/wordpress-theme-configuration/.gitignore; fi",
      "if [ -d ./web/app/mu-plugins/wordpress-theme-configuration/.git ]; then rm -rf ./web/app/mu-plugins/wordpress-theme-configuration/.git; fi",
      "if [ -f ./web/app/mu-plugins/wordpress-theme-configuration/composer.json ]; then rm -f ./web/app/mu-plugins/wordpress-theme-configuration/composer.json; fi"
    ],
    "clear-mu-autoloader": [
      "if [[ -d ./web/app/mu-plugins/wordpress-mu-plugin-autoloader && -f ./web/app/mu-plugins/mu-plugin-autoloader.php ]]; then rm -rf ./web/app/mu-plugins/wordpress-mu-plugin-autoloader; fi"
    ],
    "clear-base-theme": [
      "name=$(basename $PWD); if [ -f ./web/app/themes/$name/.gitignore ]; then rm -f ./web/app/themes/$name/.gitignore; fi",
      "name=$(basename $PWD); if [ -d ./web/app/themes/$name/.git ]; then rm -rf ./web/app/themes/$name/.git; fi",
      "name=$(basename $PWD); if [ -f ./web/app/themes/$name/composer.json ]; then rm -f ./web/app/themes/$name/composer.json; fi"
    ],
    "htpasswd-web": [
      "@putenv HT_HEADER=\n\nAuthType Basic\nAuthName \"restricted area\"",
      "@putenv HT_FOOTER=require valid-user",
      "if [ ! -f ./web/.htpasswd ]; then htpasswd -b -c ./web/.htpasswd user password; chmod 644 ./web/.htpasswd; printenv HT_HEADER >> ./web/.htaccess; echo \"AuthUserFile ${PWD}/web/.htpasswd\" >> ./web/.htaccess; printenv HT_FOOTER >> ./web/.htaccess; fi"
    ],
    "htpasswd-www": [
      "@putenv HT_HEADER=\n\nAuthType Basic\nAuthName \"restricted area\"",
      "@putenv HT_FOOTER=require valid-user",
      "name=$(basename $PWD); path=./web/app/themes/$name/www; if [ ! -f $path/.htpasswd ]; then htpasswd -b -c $path/.htpasswd user password; chmod 644 $path/.htpasswd; printenv HT_HEADER >> $path/.htaccess; echo \"AuthUserFile ${PWD}/web/app/themes/$name/www/.htpasswd\" >> $path/.htaccess; printenv HT_FOOTER >> $path/.htaccess; fi"
    ]
  }
}
